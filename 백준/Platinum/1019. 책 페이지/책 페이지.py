# 백준 1019 책 페이지 - 플래티넘 5
import sys


# N 페이지의 책에서 각 숫자가 얼만큼 나오는지 구하기
# ex) 1 몇개 2 몇개
# 최대 10^9 페이지
# 각 자릿수 별로 몇 개씩 나오는지 규칙 찾는다.

page_str = sys.stdin.readline().strip() # 총 페이지 개수(문자열)
N = int(page_str)
answer = [0] * 10 # 0 ~ 9 개수 저장하는 리스트
digit = len(page_str) # 자릿수

# 각 자릿수 별로 계산 진행
# N = 3654로 가정한 예시를 주석 작성
for i in range(digit):
    num = int(page_str[i]) # 해당 자릿수의 숫자

    # 해당 자리의 숫자번대의 개수 계산
    # ex1) 3000 ~ 3654 사이의 총 숫자의 개수는  -> 654 + 1개
    # ex2) 600 ~ 654 사이의 총 숫자의 개수는  -> 54 + 1개
    # ex3) 50 ~ 54 사이의 총 숫자의 개수는 -> 4 + 1개
    # ex4) 44 ~ 4 사이의 총 숫자의 개수는 -> 0 + 1개
    
    # 1의 자리인 경우
    if i == digit - 1:
        cnt = 0
    # 나머지 자릿수인 경우
    else:
        cnt = int(page_str[i+1:])

    answer[num] += cnt + 1

    tmp = 10 ** (digit - i - 1) # 몇의 자리인지에 대한 변수
    
    # 1. 최대 자릿수의 경우, 나머지 자리를 신경 쓸 필요가 없으므로 계산 후 다음 자리로 넘어감
    # ex) 1~2000번대 숫자 중에서 1000의 자리에 오는 1~2의 개수
    if i == 0:
        for j in range(1, num):
            answer[j] += tmp
        continue

    # 2. 최대 자릿수가 아닌 경우, 케이스 별로 계산 진행
    # ex1) 3000번대 숫자 중에서 100의 자리에 오는 0~5의 개수
    # ex2) 600번대 숫자 중에서 10의 자리에 오는 0~4의 개수
    # ex3) 50번대 숫자 중에서 1의 자리에 오는 0~3의 개수
    for j in range(num):
        answer[j] += tmp
        
    # ex1) 3자릿수(100~999) 중에서 100의 자리에 오는 1~9의 개수
    # ex2) 2자릿수(10~99) 중에서 10의 자리에 오는 1~9의 개수
    # ex3) 1자릿수(1~9) 중에서 1의 자리에 오는 1~9의 개수
    for j in range(1, 10):
        answer[j] += tmp

    # ex1) 3000번대를 제외한 4자리 숫자에서 100의 자리에 오는 0~9의 숫자 개수
    # ex2) 600번대를 제외한 3자리 숫자에서 10의 자리에 오는 0~9의 숫자 개수
    # ex3) 50번대를 제외한 2자리 숫자에서 1의 자리에 오는 0~9의 숫자 개수
    for j in range(10):
        answer[j] += (int(page_str[:i]) - 1) * tmp

print(*answer)