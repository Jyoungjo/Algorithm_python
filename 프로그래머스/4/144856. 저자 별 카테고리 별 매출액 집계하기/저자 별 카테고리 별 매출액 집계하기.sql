-- 2022년 1월 도서 판매 데이터 기준 저자, 카테고리 별 매출액 출력
-- 저자 ID, 저자명, 카테고리, 매출액

-- 1. 2022년 1월 도서 판매 데이터를 BOOK_ID 기준 GROUP BY 후 SUM 집계
-- 2. 해당 테이블에 BOOK + AUTHOR 조인
-- 3. 저자, 카테고리 별 매출액 출력

# SELECT B.AUTHOR_ID, A.AUTHOR_NAME, B.CATEGORY, (B.PRICE * S.SALES) AS TOTAL_SALES
# FROM BOOK AS B
#     JOIN AUTHOR AS A
#     ON B.AUTHOR_ID = A.AUTHOR_ID
#         JOIN (
#             SELECT BOOK_ID, SUM(SALES) AS SALES
#             FROM BOOK_SALES
#             WHERE SALES_DATE LIKE '2022-01%'
#             GROUP BY BOOK_ID
#         ) AS S
#         ON B.BOOK_ID = S.BOOK_ID
# ORDER BY B.AUTHOR_ID, B.CATEGORY DESC

# SELECT B.AUTHOR_ID, A.AUTHOR_NAME, B.CATEGORY, (B.PRICE * S.SALES) AS TOTAL_SALES
# FROM BOOK AS B
#     JOIN AUTHOR AS A
#     ON B.AUTHOR_ID = A.AUTHOR_ID
#         JOIN (
#             SELECT BOOK_ID, SUM(SALES) AS SALES
#             FROM BOOK_SALES
#             WHERE SALES_DATE LIKE '2022-01%'
#             GROUP BY BOOK_ID
#         ) AS S
#         ON B.BOOK_ID = S.BOOK_ID
# GROUP BY A.AUTHOR_NAME, B.CATEGORY
# ORDER BY B.AUTHOR_ID, B.CATEGORY DESC

SELECT B.AUTHOR_ID, A.AUTHOR_NAME, B.CATEGORY, SUM(B.PRICE * S.SALES) AS TOTAL_SALES
FROM BOOK AS B
    JOIN AUTHOR AS A
    ON B.AUTHOR_ID = A.AUTHOR_ID
        JOIN (
            SELECT BOOK_ID, SUM(SALES) AS SALES
            FROM BOOK_SALES
            WHERE SALES_DATE LIKE '2022-01%'
            GROUP BY BOOK_ID
        ) AS S
        ON B.BOOK_ID = S.BOOK_ID
GROUP BY A.AUTHOR_NAME, B.CATEGORY
ORDER BY B.AUTHOR_ID, B.CATEGORY DESC